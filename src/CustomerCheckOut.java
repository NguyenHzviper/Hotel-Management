/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import com.itextpdf.text.Paragraph;
import java.sql.*;
import project.*;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Calendar;
import com.itextpdf.text.pdf.PdfPTable;
import java.io.*;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import java.awt.Desktop;
import java.text.NumberFormat;
import java.util.Locale;
/**
 *
 * @author NGUYEN
 */
public class CustomerCheckOut extends javax.swing.JFrame {

    /**
     * Creates new form CustomerCheckOut
     */
    public CustomerCheckOut() {
        initComponents();
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextField5.setEditable(false);
        jTextField6.setEditable(false);
        jTextField7.setEditable(false);
        jTextField8.setEditable(false);
        jTextField9.setEditable(false);
    }
    int id=0;
    String Query;
    String roomType;
    String bed;
    String roomNo;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(50, 118));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Algerian", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Customer Check Out.png"))); // NOI18N
        jLabel1.setText("Customer Check Out");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 22, 270, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Số phòng");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 90, 120, 20));

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, 109, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Họ tên", "SĐT", "Quốc gia", "Giới tính", "Email", "CMMD/CCCD", "Địa chỉ", "Ngày nhận phòng", "Số phòng", "Loại giường", "Loại phòng", "Giá/ngày"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(90);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(8).setMaxWidth(200);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(10).setPreferredWidth(40);
            jTable1.getColumnModel().getColumn(11).setPreferredWidth(30);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 1240, 240));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Họ tên khách hàng");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 140, -1));

        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 165, 205, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Ngày nhận phòng");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 130, 140, -1));

        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 160, 202, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Ngày trả phòng");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, -1, -1));

        jTextField4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 160, 220, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Số điện thoại khách hàng");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 130, 190, -1));

        jTextField5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField5, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 160, 197, -1));

        jButton2.setBackground(new java.awt.Color(102, 0, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Tìm kiếm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 90, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Giá/ngày");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 217, -1, -1));

        jTextField6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 252, 205, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Số ngày ở");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 217, -1, -1));

        jTextField7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(jTextField7, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 252, 202, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Tổng tiền thu từ khách hàng");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 220, 310, -1));

        jTextField8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(jTextField8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 250, 220, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Email");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 220, 69, -1));

        jTextField9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(jTextField9, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 250, 199, -1));

        jButton3.setBackground(new java.awt.Color(102, 0, 0));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Trả phòng");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 293, -1, -1));

        jButton4.setBackground(new java.awt.Color(102, 0, 0));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Xóa");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(143, 293, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check.png"))); // NOI18N
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        ResultSet rs=Select.getData("select *from customer where checkOut is NULL");
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        try 
        {
            while(rs.next())
            {
                model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10),rs.getString(11),rs.getString(12),rs.getString(13)});                                      
            }
            rs.close();
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null,e);
        }
       
    }//GEN-LAST:event_formComponentShown

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String roomNo=jTextField1.getText();
        try 
        {
            ResultSet rs=Select.getData("select *from customer where roomNo='"+roomNo+"' and checkout is NULL");
            if(rs.next())
            {
                jTextField1.setEditable(false);
                id=rs.getInt(1);
                jTextField2.setText(rs.getString(2));
                jTextField3.setText(rs.getString(9));          
                jTextField5.setText(rs.getString(3));
                jTextField6.setText(rs.getString(13));
                
                SimpleDateFormat myFormat=new SimpleDateFormat("yyyy/MM/dd");
                Calendar cal=Calendar.getInstance();
                jTextField4.setText(myFormat.format(cal.getTime()));
                String dataBeforeString =rs.getString(9);
                java.util.Date dateBefore=myFormat.parse(dataBeforeString);
                String dateAfterString=myFormat.format(cal.getTime());
                java.util.Date dateAfter=myFormat.parse(dateAfterString);
                long difference=dateAfter.getTime()-dateBefore.getTime();
                int noOfDayStay=(int)(difference/(1000*60*60*24));
                if(noOfDayStay==0)
                    noOfDayStay=1;
                jTextField7.setText(String.valueOf(noOfDayStay));
                float price=Float.parseFloat(jTextField6.getText());
                
                jTextField8.setText(String.valueOf(noOfDayStay*price));
                jTextField9.setText(rs.getString(6));
                roomType=rs.getString(12);
                bed=rs.getString(11);
            }
            else 
                JOptionPane.showMessageDialog(null,"Số phòng này đã được đăt or Số phòng này không tồn tại");
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new CustomerCheckOut().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String name=jTextField2.getText();
        String mobileNumber=jTextField5.getText();
        String email=jTextField9.getText();
        String checkIn = jTextField3.getText();
        String checkOut=jTextField4.getText();
        String numberOfDayStay=jTextField7.getText();
        String totalAmount=jTextField8.getText();
        String Gia = jTextField6.getText();
        roomNo=jTextField1.getText();
        Query="update customer set numberOfDayStay='"+numberOfDayStay+"',totalAmount='"+totalAmount+"',checkOut='"+checkOut+"' where id='"+id+"'";
        InsertUpdateDelete.setData(Query,"");
        Query="update room set Status='Not Booked' where roomNo='"+roomNo+"'";
        InsertUpdateDelete.setData(Query,"");
        
        Document document = new Document(PageSize.A4);
            String filename = name;
            String path = "D:\\";
            try {
                PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(path+""+filename+".pdf"));
                document.open();
                document.addAuthor("Lâm Trà My");
                document.addCreationDate();
                document.addCreator("QLKS");
                document.addTitle("Hóa đơn dịch vụ");
                document.addSubject("Hóa đơn dịch vụ");
                
                //Định dạng Font Tiêu đề
                File filefontTieuDe = new File("fonts/vuArialBold.ttf");
                BaseFont bfTieuDe = BaseFont.createFont(filefontTieuDe.getAbsolutePath(), BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                Font fontTieuDe1 = new Font(bfTieuDe,16);
                fontTieuDe1.setColor(BaseColor.BLUE);
                Font fontTieuDe2 = new Font(bfTieuDe, 13);
                fontTieuDe2.setColor(BaseColor.BLUE);
                Font fontTieuDe3 = new Font(bfTieuDe, 13);
                Font fontTieuDe4 = new Font(bfTieuDe, 12);
                
                //Định dạng Font Nội dung
                File filefontNoiDung = new File("fonts/vuArial.ttf");
                BaseFont bfNoiDung = BaseFont.createFont(filefontNoiDung.getAbsolutePath(), BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
                Font fontNoiDung1 = new Font(bfNoiDung, 13);
                Font fontNoiDung2 = new Font(bfNoiDung, 12);
                Font fontNoiDung3 = new Font(bfNoiDung, 11);
                
                
                //Chèn logo
                Image logo = Image.getInstance("images/hospital.png");
                logo.setAbsolutePosition(80, 750);
                logo.scaleAbsolute(50, 50);
                document.add(logo);
                
                //Chèn tên phòng khám
                Paragraph prgTenKS = new Paragraph("KHÁCH SẠN ABC", fontTieuDe2);
                prgTenKS.setIndentationLeft(100);
                document.add(prgTenKS);
                
                //Chèn địa chỉ phòng khám
                Paragraph prgDiaChiKS = new Paragraph("Khu phố 6, phường Bình Thọ, Tp.Thủ Đức, Tp. Hồ Chí Minh", fontNoiDung2);
                prgDiaChiKS.setIndentationLeft(100);
                document.add(prgDiaChiKS);
                
                //Chèn số DDT phòng khám
                Paragraph prgSoDTKS = new Paragraph("Số Điện thoại: 028 3456 7890", fontNoiDung2);
                prgSoDTKS.setIndentationLeft(100);
                document.add(prgSoDTKS);
                
                //Chèn Tiêu đề pdf
                Paragraph prgTieuDe = new Paragraph("HÓA ĐƠN DỊCH VỤ", fontTieuDe1);
                prgTieuDe.setAlignment(Element.ALIGN_CENTER);
                prgTieuDe.setSpacingBefore(10);
                prgTieuDe.setSpacingAfter(10);
                document.add(prgTieuDe);
                Paragraph paragraph1 = new Paragraph("\t Họ tên khách hàng: "+ name.toUpperCase(), fontTieuDe3);
                document.add(paragraph1);
                Paragraph paragraph2 = new Paragraph("\t Số điện thoại: "+ mobileNumber, fontNoiDung1);
                document.add(paragraph2);
                Paragraph paragraph3 = new Paragraph("\t Email: "+ email, fontNoiDung1);
                document.add(paragraph3);             
                Paragraph paragraph4 = new Paragraph("\t Ngày đến: "+  checkIn, fontNoiDung1);
                document.add(paragraph4);
                Paragraph paragraph5 = new Paragraph("\t Ngày đi: "+ checkOut, fontNoiDung1);
                document.add(paragraph5);
               
                 //chèn thông tin các dịch vụ đã sử dụng
                Paragraph prgHoaDon = new Paragraph("Chi tiết hóa đơn: ", fontTieuDe3);
                prgHoaDon.setSpacingBefore(10);
                prgHoaDon.setSpacingAfter(10);
                document.add(prgHoaDon);
                
                //Định nghĩa số côt, chiều rộng bảng
                PdfPTable tableDV = new PdfPTable(6); //6 cột
                tableDV.setWidthPercentage(80);
                tableDV.setSpacingBefore(10);
                tableDV.setSpacingAfter(10);
                
                //Set Column widths
                float[] tableDV_columnWidths = {80, 120, 120, 100, 80, 100};
                tableDV.setWidths(tableDV_columnWidths);
                
                PdfPCell cellTDSP = new PdfPCell(new Paragraph("Số phòng", fontTieuDe4));
                cellTDSP.setBorderColor(BaseColor.BLACK);
                cellTDSP.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellTDSP.setVerticalAlignment(Element.ALIGN_MIDDLE);
                cellTDSP.setMinimumHeight(30);
                tableDV.addCell(cellTDSP);
                
                PdfPCell cellTDLoaiPhong = new PdfPCell(new Paragraph("Loại phòng", fontTieuDe4));
                cellTDLoaiPhong.setBorderColor(BaseColor.BLACK);
                cellTDLoaiPhong.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellTDLoaiPhong.setVerticalAlignment(Element.ALIGN_MIDDLE);
                tableDV.addCell(cellTDLoaiPhong);
                
                PdfPCell cellTDBed = new PdfPCell(new Paragraph("Loại giường", fontTieuDe4));
                cellTDBed.setBorderColor(BaseColor.BLACK);
                cellTDBed.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellTDBed.setVerticalAlignment(Element.ALIGN_MIDDLE);
                tableDV.addCell(cellTDBed);
                
                PdfPCell cellTDGia = new PdfPCell(new Paragraph("Giá/ngày", fontTieuDe4));
                cellTDGia.setBorderColor(BaseColor.BLACK);
                cellTDGia.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellTDGia.setVerticalAlignment(Element.ALIGN_MIDDLE);
                tableDV.addCell(cellTDGia);
                
                PdfPCell cellTDSL = new PdfPCell(new Paragraph("Số ngày ở", fontTieuDe4));
                cellTDSL.setBorderColor(BaseColor.BLACK);
                cellTDSL.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellTDSL.setVerticalAlignment(Element.ALIGN_MIDDLE);
                tableDV.addCell(cellTDSL);
                
                PdfPCell cellTDThanhTien = new PdfPCell(new Paragraph("Thành tiền", fontTieuDe4));
                cellTDThanhTien.setBorderColor(BaseColor.BLACK);
                cellTDThanhTien.setHorizontalAlignment(Element.ALIGN_CENTER);
                cellTDThanhTien.setVerticalAlignment(Element.ALIGN_MIDDLE);
                tableDV.addCell(cellTDThanhTien);
           
                 
                 try {
                    int TongTien = 0;
                    
                    ResultSet rs = Select.getData("Select * from customer");
                    
                    while(rs.next()) {
                    
                    PdfPCell cellRoomNo = new PdfPCell (new Paragraph(rs.getString(10),fontNoiDung3));
                    cellRoomNo.setPaddingLeft(10);
                    cellRoomNo.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellRoomNo.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    tableDV.addCell(cellRoomNo);
                    
                    PdfPCell cellRoom = new PdfPCell (new Paragraph(rs.getString(12),fontNoiDung3));
                    cellRoom.setPaddingLeft(10);
                    cellRoom.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellRoom.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    tableDV.addCell(cellRoom);
                    
                    PdfPCell cellBed = new PdfPCell (new Paragraph(rs.getString(11),fontNoiDung3));
                    cellBed.setPaddingLeft(10);
                    cellBed.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellBed.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    tableDV.addCell(cellBed);
                    
                 
                    PdfPCell cellGia = new PdfPCell (new Paragraph(DinhDangTienTe (rs.getInt(13)),fontNoiDung3));
                    cellGia.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellGia.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    tableDV.addCell(cellGia);
                    
                    PdfPCell cellSoNgay = new PdfPCell (new Paragraph(rs.getString(14),fontNoiDung3));
                    cellSoNgay.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellSoNgay.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    tableDV.addCell(cellSoNgay);
                    
                    PdfPCell cellThanhTien = new PdfPCell (new Paragraph(DinhDangTienTe(rs.getInt(15)),fontNoiDung3));
                    cellThanhTien.setPaddingLeft(10);
                    cellThanhTien.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellThanhTien.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    tableDV.addCell(cellThanhTien);
                    TongTien = TongTien + rs.getInt("totalAmount");
                   
                    }
                    PdfPCell cellTongCong = new PdfPCell(new Paragraph("TỔNG CỘNG: ", fontTieuDe4));
                    cellTongCong.setColspan(5);
                    cellTongCong.setHorizontalAlignment(Element.ALIGN_CENTER);
                    cellTongCong.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    cellTongCong.setMinimumHeight(20);
                    tableDV.addCell(cellTongCong);
                    
                    PdfPCell cellTongTien = new PdfPCell(new Paragraph(DinhDangTienTe(TongTien), fontTieuDe4));
                    cellTongTien.setHorizontalAlignment(Element.ALIGN_RIGHT);
                    cellTongTien.setVerticalAlignment(Element.ALIGN_MIDDLE);
                    tableDV.addCell(cellTongTien);
                    
                } catch(Exception e) {
                    System.out.println(e);
                    System.out.println("Lỗi");
                }
                document.add(tableDV);
                Paragraph prgKetThuc = new Paragraph("CẢM ƠN QUÝ KHÁCH, HẸN GẶP LẠI!", fontTieuDe1);
                prgKetThuc.setAlignment(Element.ALIGN_CENTER);
                prgKetThuc.setSpacingBefore(10);
                prgKetThuc.setSpacingAfter(10);
                document.add(prgKetThuc);
                 
             // Đóng document sau khi định dạng 
                document.close();
                // Đóng writer sau khi ghi file pdf
                writer.close();
            } catch (Exception e) {
                    e.printStackTrace();
            }
            // Mở file pdf sau khi định dạng và write
            try {
                File file = new File("reports/" + filename +".pdf");
                if(!Desktop.isDesktopSupported()) {
                    System.out.println("not supported");
                    return;
                }
                Desktop desktop = Desktop.getDesktop();
                if(file.exists()) {
                    desktop.open(file);
                }
            } catch(Exception e) {
                e.printStackTrace();
            }
           
        
        
        /*String path="D:\\";
        com.itextpdf.text.Document doc=new com.itextpdf.text.Document();
        try 
        {            
            PdfWriter.getInstance(doc, new FileOutputStream(path+""+id+".pdf"));
            doc.open();
            Paragraph paragraph1=new Paragraph("                               Hotel Management System\n");
            doc.add(paragraph1);
            Paragraph paragraph2=new Paragraph("***************************************************************************");
            doc.add(paragraph2);
            Paragraph paragraph3=new Paragraph("\tMã hóa đơn: "+id+"\nChi tiết khách hàng:\nHọ tên: "+name+"\nSố điện thoại: "+mobileNumber+"\nEmail:"+email+"\n ");
            doc.add(paragraph3);
            doc.add(paragraph2);
            Paragraph paragraph4=new Paragraph("\tChi tiết phòng:\nSố phòng: "+jTextField1.getText()+"\nLoại phòng: "+roomType+"\nLoại giường: "+bed+"\nGiá/ngày: "+jTextField6.getText()+"");
            doc.add(paragraph4);
            doc.add(paragraph2);
            PdfPTable tb1=new PdfPTable(4);
            tb1.addCell("Check IN Date: "+jTextField3.getText());
            tb1.addCell("Check OUT Date: "+checkOut);
            tb1.addCell("No of Days Stay: "+numberOfDayStay);
            tb1.addCell("Total Amount Paid: "+totalAmount);
            doc.add(tb1);
            doc.add(paragraph2);
            Paragraph paragraph5=new Paragraph("Cảm ơn quý khách, hẹn gặp lại!"); 
            doc.add(paragraph5);
        } 
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null,e);
        }
        doc.close();*/
        int a=JOptionPane.showConfirmDialog(null, "Bạn có muốn in hóa đơn","Select",JOptionPane.YES_NO_OPTION);
        if(a==0)
        {
            try 
            {
                if((new File("D:\\" + filename +".pdf")).exists())  
                {
                    Process p=Runtime
                            .getRuntime()
                            .exec("rundll32 url.dll,FileProtocolHandler D:\\"+filename+".pdf");
                }
                else
                    System.out.println("File này không tồn tại");
            } 
            catch (Exception e) 
            { 
                JOptionPane.showMessageDialog(null, e);
            }
        }
        setVisible(false);
        new CustomerCheckOut().setVisible(true);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        setVisible(false); 
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    public String DinhDangTienTe(int SoTien) {
        // tạo 1 NumberFormat để định dạng số theo tiêu chuẩn EN
        Locale localeEN = new Locale("en", "EN");
        NumberFormat en = NumberFormat.getInstance(localeEN);
        
        //phần ngàn của số được phân cách bằng dấu phẩy
        String str = en.format(SoTien);
        return str;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerCheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerCheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerCheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerCheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerCheckOut().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
